%{
#include<iostream>
#include<map>
#include<cstdio>
#include<cstdlib>
#include<string>
#include<cctype>

using namespace std;

extern int yylex();

void yyerror(string s){
    cerr << "Sintaksna greska: "<< s << endl;
    exit(EXIT_FAILURE);
}

map<string, int> promenljive;

%}
%union {
	int vrednost;
	std::string *ime;
}

%token BYE_T IZ_T INC_T DEC_T PRINT_T COND_T NEQ_T GT_T EQ_T
%token<vrednost> BROJ_T
%token<ime> ID_T

%type<vrednost> izraz

%left '+' '-'
%left '*'

%start program

%%
program: niz_naredbi BYE_T '\n' { return 0;}
    ;
niz_naredbi: niz_naredbi naredba '\n'
    |
    ;
naredba: ID_T IZ_T izraz    {
        promenljive[*$1] = $3;
        delete $1;
}
      |  PRINT_T izraz      {
          cout << (char)$2 << endl;
      }
      |  COND_T izraz IZ_T GT_T izraz '\n' PRINT_T izraz {
          if($2 > $5)
            cout << (char)$8 << endl;
      }
      |  COND_T izraz IZ_T EQ_T izraz '\n' PRINT_T izraz {
          if($2 == $5)
            cout << (char)$8 << endl;
      }
      |  COND_T izraz IZ_T NEQ_T GT_T izraz '\n' PRINT_T izraz {
          if($2<=$6)
            cout << (char)$9 << endl;
      }
      |  COND_T izraz IZ_T NEQ_T EQ_T izraz '\n' PRINT_T izraz {
          if($2 != $6)
            cout << (char)$9 << endl;
      }
      ;
izraz: izraz '+' izraz  {
    $$ = min(255, $1+$3);
}
     | izraz '-' izraz  {
         $$ = max(0, $1-$3);
     }
     | izraz '*' izraz  {
         $$ = min(255, $1*$3);
     }
     | '(' izraz ')'    {$$ = $2;}
     | BROJ_T           {
         $$ = $1;
     }
     | ID_T             {
         auto it = promenljive.find(*$1);
         if(it == promenljive.end())
            yyerror("Nedefinisana promenljiva!");
         $$ = promenljive[*$1];
         delete $1;
     }
     | ID_T INC_T       {
         auto it = promenljive.find(*$1);
         if(it == promenljive.end())
            yyerror("Nedefinisana promenljiva!");
        if(promenljive[*$1] < 255)
            $$ = promenljive[*$1]++;
        else
            $$ = 255;
        delete $1;
     }
     | ID_T DEC_T       {
         auto it = promenljive.find(*$1);
         if(it == promenljive.end())
            yyerror("Nedefinisana promenljiva!");
        if(promenljive[*$1] > 0)
            $$ = promenljive[*$1]--;
        else
            $$ = 0;
        delete $1;
     }
     | DEC_T ID_T       {
        auto it = promenljive.find(*$2);
        if(it == promenljive.end())
            yyerror("Nedefinisana promenljiva");
        if(promenljive[*$2] > 0)
            $$ = --promenljive[*$2];
        else
            $$ = 0;
        delete $2;
     }
     | INC_T ID_T       {
        auto it = promenljive.find(*$2);
        if(it == promenljive.end())
            yyerror("Nedefinisana promenljiva!");
        if(promenljive[*$2]<255)
            $$ = ++promenljive[*$2];
        else
            $$ = 255;
        delete $2;
     }

%%

int main(){

    if(yyparse() == 0)
        cout << "Sve je okej!" << endl;
    else{
        cout << "Sintaksno nije dobro!" << endl;
        exit(EXIT_FAILURE);
    }

    exit(EXIT_SUCCESS);
}