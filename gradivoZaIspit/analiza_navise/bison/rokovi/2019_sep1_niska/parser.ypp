%{
#include<iostream>
#include<map>
#include<vector>
#include<string>
#include<cstdlib>
#include<cstdio>

using namespace std;
extern int yylex();

void yyerror(string s){
    cerr << "Sintaksna greska: " << s << endl;
    exit(EXIT_FAILURE);
}

map<string, int> promenljive;

%}
%union{
 std::string *ime;
 int vrednost;
}

%token EQ_T GT_T LT_T INC_T MALA_T CONST_T NISKA_T OBRNI_T DUZINA_T VELIKA_T STAMPAJ_T PODNISKA_T SORTIRAJ_T
%token<ime> ID_T
%token<vrednost> BROJ_T
%type<vrednost> izraz

%left '+'
%left '*'


%start program
%%

program:program naredba ';'
       | naredba ';'
       ;
naredba: NISKA_T ID_T '=' izraz  {}
       | izraz                   {}
       ;
izraz: izraz '+' izraz           {}
     | '(' izraz ')'             {} 
     |  CONST_T                  {}
     | izraz ',' izraz           {cout << "Ovde sam!" << endl;}
     | ID_T INC_T izraz          {}
     | ID_T '.' OBRNI_T '(' ')'  {}
     | ID_T '.' SORTIRAJ_T '(' ')'{}
     | DUZINA_T '(' izraz ')'    {}
     | ID_T                      {}
     | ID_T '.' PODNISKA_T '('izraz ')' {}
     | ID_T '.' MALA_T '(' ')'   {}
     | ID_T '.' VELIKA_T '(' ')' {}
     | STAMPAJ_T '(' izraz ')'   {}
     ;


%%

int main(){
    if(yyparse() == 0)
        cout << "Sve je okej!" << endl;
    else{
        cout << "Sintaksna greska!" << endl;
        exit(EXIT_FAILURE);
    }
    exit(EXIT_SUCCESS);
}
